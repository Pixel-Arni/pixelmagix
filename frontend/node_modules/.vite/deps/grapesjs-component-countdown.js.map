{
  "version": 3,
  "sources": ["../../grapesjs-component-countdown/dist/webpack:/grapesjs-component-countdown/webpack/universalModuleDefinition", "../../grapesjs-component-countdown/dist/webpack:/grapesjs-component-countdown/webpack/bootstrap", "../../grapesjs-component-countdown/dist/webpack:/grapesjs-component-countdown/webpack/runtime/define property getters", "../../grapesjs-component-countdown/dist/webpack:/grapesjs-component-countdown/webpack/runtime/hasOwnProperty shorthand", "../../grapesjs-component-countdown/dist/webpack:/grapesjs-component-countdown/webpack/runtime/make namespace object", "../../grapesjs-component-countdown/dist/webpack:/grapesjs-component-countdown/src/index.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-component-countdown\"] = factory();\n\telse\n\t\troot[\"grapesjs-component-countdown\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import type { Plugin, BlockProperties, ComponentDefinition } from 'grapesjs';\n\nexport type PluginOptions = {\n  /**\n   * The ID used to create the block and component\n   * @default 'countdown'\n   */\n  id?: string;\n\n  /**\n   * The label used for the block and the component.\n   * @default 'Countdown'\n   */\n  label?: string,\n\n  /**\n   * Object to extend the default block. Pass a falsy value to avoid adding the block.\n   * @example\n   * { label: 'Countdown', category: 'Extra', ... }\n   */\n  block?: Partial<BlockProperties>;\n\n  /**\n   * Object to extend the default component properties.\n   * @example\n   * { name: 'Countdown', droppable: false, ... }\n   */\n  props?: ComponentDefinition;\n\n  /**\n   * Custom CSS styles for the component. This will replace the default one.\n   * @default ''\n   */\n  style?: string,\n\n  /**\n   * Additional CSS styles for the component. These will be appended to the default one.\n   * @default ''\n   */\n  styleAdditional?: string,\n\n  /**\n   * Default start time.\n   * @default ''\n   * @example '2018-01-25 00:00'\n   */\n  startTime?: string,\n\n  /**\n   * Text to show when the countdown is ended.\n   * @default 'EXPIRED'\n   */\n  endText?: string,\n\n  /**\n   * Date input type, eg. `date`, `datetime-local`\n   * @default 'date'\n   */\n  dateInputType?: string,\n\n  /**\n   * Days label text used in component.\n   * @default 'days'\n   */\n  labelDays?: string,\n\n  /**\n   * Hours label text used in component.\n   * @default 'hours'\n   */\n  labelHours?: string,\n\n  /**\n   * Minutes label text used in component.\n   * @default 'minutes'\n   */\n  labelMinutes?: string,\n\n  /**\n   * Seconds label text used in component.\n   * @default 'seconds'\n   */\n  labelSeconds?: string,\n\n  /**\n   * Countdown component class prefix.\n   * @default 'countdown'\n   */\n  classPrefix?: string,\n};\n\ntype TElement = HTMLElement & { __gjsCountdownInterval: NodeJS.Timer };\n\ndeclare global {\n  interface Window { __gjsCountdownIntervals: TElement[]; }\n}\n\nconst plugin: Plugin<PluginOptions> = (editor, opts = {}) => {\n  const options: PluginOptions = {\n    id: 'countdown',\n    label: 'Countdown',\n    block: {},\n    props: {},\n    style: '',\n    styleAdditional: '',\n    startTime: '',\n    endText: 'EXPIRED',\n    dateInputType: 'date',\n    labelDays: 'days',\n    labelHours: 'hours',\n    labelMinutes: 'minutes',\n    labelSeconds: 'seconds',\n    classPrefix: 'countdown',\n    ...opts,\n  };\n\n  const { block, props, style } = options;\n  const id = options.id!;\n  const label = options.label!;\n  const pfx = options.classPrefix!;\n\n  // Create block\n  if (block) {\n    editor.Blocks.add(id, {\n      media: `<svg viewBox=\"0 0 24 24\">\n        <path fill=\"currentColor\" d=\"M12 20C16.4 20 20 16.4 20 12S16.4 4 12 4 4 7.6 4 12 7.6 20 12 20M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22C6.5 22 2 17.5 2 12C2 6.5 6.5 2 12 2M17 11.5V13H11V7H12.5V11.5H17Z\" />\n      </svg>`,\n      label,\n      category: 'Extra',\n      select: true,\n      content: { type: id },\n      ...block\n    });\n  };\n\n  const coundownScript = function(props: Record<string, any>) {\n    const startfrom: string = props.startfrom;\n    const endTxt: string = props.endText;\n    // @ts-ignore\n    const el: TElement = this;\n    const countDownDate = new Date(startfrom).getTime();\n    const countdownEl = el.querySelector('[data-js=countdown]') as HTMLElement;\n    const endTextEl = el.querySelector('[data-js=countdown-endtext]') as HTMLElement;\n    const dayEl = el.querySelector('[data-js=countdown-day]')!;\n    const hourEl = el.querySelector('[data-js=countdown-hour]')!;\n    const minuteEl = el.querySelector('[data-js=countdown-minute]')!;\n    const secondEl = el.querySelector('[data-js=countdown-second]')!;\n    const oldInterval = el.__gjsCountdownInterval;\n    oldInterval && clearInterval(oldInterval);\n\n    const connected: TElement[] = window.__gjsCountdownIntervals || [];\n    const toClean: TElement[] = [];\n    connected.forEach((item: TElement) => {\n      if (!item.isConnected) {\n        clearInterval(item.__gjsCountdownInterval);\n        toClean.push(item);\n      }\n    });\n    connected.indexOf(el) < 0 && connected.push(el);\n    window.__gjsCountdownIntervals = connected.filter(item => toClean.indexOf(item) < 0);\n\n    const setTimer = function (days: number, hours: number, minutes: number, seconds: number) {\n      dayEl.innerHTML = `${days < 10 ? '0' + days : days}`;\n      hourEl.innerHTML = `${hours < 10 ? '0' + hours : hours}`;\n      minuteEl.innerHTML = `${minutes < 10 ? '0' + minutes : minutes}`;\n      secondEl.innerHTML = `${seconds < 10 ? '0' + seconds : seconds}`;\n    }\n\n    const moveTimer = function() {\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n      const days = Math.floor(distance / 86400000);\n      const hours = Math.floor((distance % 86400000) / 3600000);\n      const minutes = Math.floor((distance % 3600000) / 60000);\n      const seconds = Math.floor((distance % 60000) / 1000);\n\n      setTimer(days, hours, minutes, seconds);\n\n      if (distance < 0) {\n        clearInterval(el.__gjsCountdownInterval);\n        endTextEl.innerHTML = endTxt;\n        countdownEl.style.display = 'none';\n        endTextEl.style.display = '';\n      }\n    };\n\n    if (countDownDate) {\n      el.__gjsCountdownInterval = setInterval(moveTimer, 1000);\n      endTextEl.style.display = 'none';\n      countdownEl.style.display = '';\n      moveTimer();\n    } else {\n      setTimer(0, 0, 0, 0);\n    }\n  };\n\n  // Create component\n  editor.Components.addType(id, {\n    model: {\n      defaults: {\n        startfrom: options.startTime,\n        classes: [pfx],\n        endText: options.endText,\n        droppable: false,\n        script: coundownScript,\n        'script-props': ['startfrom', 'endText'],\n        traits: [{\n          label: 'Start',\n          name: 'startfrom',\n          changeProp: true,\n          type: options.dateInputType,\n        },{\n          label: 'End text',\n          name: 'endText',\n          changeProp: true,\n        }],\n        // @ts-ignore\n        components: `\n          <span data-js=\"countdown\" class=\"${pfx}-cont\">\n            <div class=\"${pfx}-block\">\n              <div data-js=\"countdown-day\" class=\"${pfx}-digit\"></div>\n              <div class=\"${pfx}-label\">${options.labelDays}</div>\n            </div>\n            <div class=\"${pfx}-block\">\n              <div data-js=\"countdown-hour\" class=\"${pfx}-digit\"></div>\n              <div class=\"${pfx}-label\">${options.labelHours}</div>\n            </div>\n            <div class=\"${pfx}-block\">\n              <div data-js=\"countdown-minute\" class=\"${pfx}-digit\"></div>\n              <div class=\"${pfx}-label\">${options.labelMinutes}</div>\n            </div>\n            <div class=\"${pfx}-block\">\n              <div data-js=\"countdown-second\" class=\"${pfx}-digit\"></div>\n              <div class=\"${pfx}-label\">${options.labelSeconds}</div>\n            </div>\n          </span>\n          <span data-js=\"countdown-endtext\" class=\"${pfx}-endtext\"></span>\n        `,\n        styles: (style || `\n          .${pfx} {\n            text-align: center;\n          }\n\n          .${pfx}-block {\n            display: inline-block;\n            margin: 0 10px;\n            padding: 10px;\n          }\n\n          .${pfx}-digit {\n            font-size: 5rem;\n          }\n\n          .${pfx}-endtext {\n            font-size: 5rem;\n          }\n\n          .${pfx}-cont {\n            display: inline-block;\n          }\n        `) + (options.styleAdditional),\n        ...props,\n      },\n    },\n  });\n};\n\nexport default plugin;"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "globalThis", "window", "this", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "n", "t", "e", "editor", "opts", "options", "id", "label", "block", "props", "style", "styleAdditional", "startTime", "endText", "dateInputType", "labelDays", "labelHours", "labelMinutes", "labelSeconds", "classPrefix", "pfx", "Blocks", "add", "media", "category", "select", "content", "type", "Components", "addType", "model", "defaults", "startfrom", "classes", "droppable", "script", "endTxt", "el", "countDownDate", "Date", "getTime", "countdownEl", "querySelector", "endTextEl", "dayEl", "hourEl", "minuteEl", "secondEl", "oldInterval", "__gjsCountdownInterval", "clearInterval", "connected", "__gjsCountdownIntervals", "toClean", "forEach", "item", "isConnected", "push", "indexOf", "filter", "setTimer", "days", "hours", "minutes", "seconds", "innerHTML", "moveTimer", "now", "distance", "Math", "floor", "display", "setInterval", "traits", "name", "changeProp", "components", "styles"]
}
